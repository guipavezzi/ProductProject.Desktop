unit Form_Cadastro_Produto;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, IdHTTP, IdSSL, IdSSLOpenSSL, System.JSON,
  ProdutoUnit;

type
  Tform_cadastro = class(TForm)
    Label1: TLabel;
    Label2: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    EditNome: TEdit;
    editPreco: TEdit;
    editDescricao: TEdit;
    btn_form_cadastro: TPanel;
    procedure btn_form_cadastroClick(Sender: TObject);
  private
    procedure CadastrarProdutoNaAPI(const Produto: TProduto);
  public
    { Public declarations }
  end;

var
  form_cadastro: Tform_cadastro;

implementation

{$R *.dfm}

procedure Tform_cadastro.btn_form_cadastroClick(Sender: TObject);
var
  Nome, Preco, Descricao: string;
  Produto: TProduto;
begin
  // Captura os dados dos campos
  Nome := EditNome.Text;
  Preco := editPreco.Text;
  Descricao := editDescricao.Text;

  // Validação dos campos
  if (Nome = '') or (Preco = '') or (Descricao = '') then
  begin
    ShowMessage('Por favor, preencha todos os campos.');
    Exit;
  end;

  // Cria o objeto Produto
  Produto := TProduto.Create(0, Nome, Preco, Descricao);

  try
    // Chama o método para cadastrar na API
    CadastrarProdutoNaAPI(Produto);

    // Mostra mensagem de sucesso e limpa os campos
    ShowMessage('Produto cadastrado com sucesso!');
    EditNome.Clear;
    editPreco.Clear;
    editDescricao.Clear;
  finally
    Produto.Free;
  end;
end;

procedure Tform_cadastro.CadastrarProdutoNaAPI(const Produto: TProduto);
var
  IdHTTP: TIdHTTP;
  SSLHandler: TIdSSLIOHandlerSocketOpenSSL;
  JSONBody: TJSONObject;
  JSONString: TStringStream;
  URL: string;
begin
  IdHTTP := TIdHTTP.Create(nil);
  SSLHandler := TIdSSLIOHandlerSocketOpenSSL.Create(nil);
  try
    // Configurações do SSL
    SSLHandler.SSLOptions.Method := sslvTLSv1_2;
    IdHTTP.IOHandler := SSLHandler;

    // URL da API
    URL := 'https://productsproject-production.up.railway.app/product';

    // Criação do corpo da requisição em JSON
    JSONBody := TJSONObject.Create;
    JSONBody.AddPair('name', Produto.Nome);
    JSONBody.AddPair('price', Produto.Preco);
    JSONBody.AddPair('description', Produto.Descricao);

    // Converte o JSON para TStringStream
    JSONString := TStringStream.Create(JSONBody.ToString, TEncoding.UTF8);

    try
      // Configura o tipo de conteúdo
      IdHTTP.Request.ContentType := 'application/json';
      // Faz a requisição POST
      IdHTTP.Post(URL, JSONString);
    except
      on E: Exception do
        ShowMessage('Erro ao cadastrar produto: ' + E.Message);
    end;

  finally
    SSLHandler.Free;
    IdHTTP.Free;
  end;
end;

end.

